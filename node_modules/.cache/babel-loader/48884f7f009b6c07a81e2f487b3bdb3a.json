{"ast":null,"code":"var _jsxFileName = \"/Users/lorraine/Documents/htdocs/lorraine-react/react-metronome/src/Metronome.js\";\nimport React, { Component } from \"react\";\nimport \"./Metronome.css\";\n\nclass Metronome extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleBpmchange = event => {\n      const bpm = event.target.value;\n      this.setState({\n        bpm\n      });\n    };\n\n    this.state = {\n      playing: false,\n      count: 0,\n      bpm: 100,\n      beatsPerMeasure: 4\n    };\n  }\n\n  render() {\n    const _this$state = this.state,\n          playing = _this$state.playing,\n          bpm = _this$state.bpm;\n    return React.createElement(\"div\", {\n      className: \"metronome\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"bpm-slider\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }, bpm, \" BPM\"), React.createElement(\"input\", {\n      type: \"range\",\n      min: \"60\",\n      max: \"240\",\n      value: bpm,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    })), React.createElement(\"button\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }, playing ? \"Stop\" : \"Start\"));\n  }\n\n}\n\nexport default Metronome;","map":{"version":3,"sources":["/Users/lorraine/Documents/htdocs/lorraine-react/react-metronome/src/Metronome.js"],"names":["React","Component","Metronome","constructor","props","handleBpmchange","event","bpm","target","value","setState","state","playing","count","beatsPerMeasure","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,iBAAP;;AAEA,MAAMC,SAAN,SAAwBD,SAAxB,CAAkC;AAChCE,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SAWnBC,eAXmB,GAWDC,KAAK,IAAI;AACzB,YAAMC,GAAG,GAAGD,KAAK,CAACE,MAAN,CAAaC,KAAzB;AACA,WAAKC,QAAL,CAAc;AAAEH,QAAAA;AAAF,OAAd;AACD,KAdkB;;AAGjB,SAAKI,KAAL,GAAa;AACXC,MAAAA,OAAO,EAAE,KADE;AAEXC,MAAAA,KAAK,EAAE,CAFI;AAGXN,MAAAA,GAAG,EAAE,GAHM;AAIXO,MAAAA,eAAe,EAAE;AAJN,KAAb;AAMD;;AAODC,EAAAA,MAAM,GAAG;AAAA,wBACkB,KAAKJ,KADvB;AAAA,UACCC,OADD,eACCA,OADD;AAAA,UACUL,GADV,eACUA,GADV;AAGP,WACE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAMA,GAAN,SADF,EAEE;AAAO,MAAA,IAAI,EAAC,OAAZ;AAAoB,MAAA,GAAG,EAAC,IAAxB;AAA6B,MAAA,GAAG,EAAC,KAAjC;AAAuC,MAAA,KAAK,EAAEA,GAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CADF,EAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAASK,OAAO,GAAG,MAAH,GAAY,OAA5B,CALF,CADF;AASD;;AA7B+B;;AAgClC,eAAeV,SAAf","sourcesContent":["import React, { Component } from \"react\";\nimport \"./Metronome.css\";\n\nclass Metronome extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      playing: false,\n      count: 0,\n      bpm: 100,\n      beatsPerMeasure: 4\n    };\n  }\n\n  handleBpmchange = event => {\n    const bpm = event.target.value;\n    this.setState({ bpm });\n  };\n\n  render() {\n    const { playing, bpm } = this.state;\n\n    return (\n      <div className=\"metronome\">\n        <div className=\"bpm-slider\">\n          <div>{bpm} BPM</div>\n          <input type=\"range\" min=\"60\" max=\"240\" value={bpm} />\n        </div>\n        <button>{playing ? \"Stop\" : \"Start\"}</button>\n      </div>\n    );\n  }\n}\n\nexport default Metronome;\n"]},"metadata":{},"sourceType":"module"}